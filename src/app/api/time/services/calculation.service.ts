/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { TimeApiConfiguration } from '../time-api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiCalculationCurrentDecrementPost } from '../fn/calculation/api-calculation-current-decrement-post';
import { ApiCalculationCurrentDecrementPost$Params } from '../fn/calculation/api-calculation-current-decrement-post';
import { apiCalculationCurrentIncrementPost } from '../fn/calculation/api-calculation-current-increment-post';
import { ApiCalculationCurrentIncrementPost$Params } from '../fn/calculation/api-calculation-current-increment-post';
import { apiCalculationCustomDecrementPost } from '../fn/calculation/api-calculation-custom-decrement-post';
import { ApiCalculationCustomDecrementPost$Params } from '../fn/calculation/api-calculation-custom-decrement-post';
import { apiCalculationCustomIncrementPost } from '../fn/calculation/api-calculation-custom-increment-post';
import { ApiCalculationCustomIncrementPost$Params } from '../fn/calculation/api-calculation-custom-increment-post';
import { Calculation } from '../models/calculation';

@Injectable({ providedIn: 'root' })
export class CalculationService extends BaseService {
  constructor(config: TimeApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiCalculationCurrentIncrementPost()` */
  static readonly ApiCalculationCurrentIncrementPostPath = '/api/calculation/current/increment';

  /**
   * Allows you to increment the current datetime by a specific timespan.
   *
   * Sample request:
   *             
   *     POST /current/increment
   *     {
   *         "timeZone": "Europe/Amsterdam",
   *         "timeSpan": "16:03:45:17"
   *     }
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCalculationCurrentIncrementPost()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCalculationCurrentIncrementPost$Response(params?: ApiCalculationCurrentIncrementPost$Params, context?: HttpContext): Observable<StrictHttpResponse<Calculation>> {
    return apiCalculationCurrentIncrementPost(this.http, this.rootUrl, params, context);
  }

  /**
   * Allows you to increment the current datetime by a specific timespan.
   *
   * Sample request:
   *             
   *     POST /current/increment
   *     {
   *         "timeZone": "Europe/Amsterdam",
   *         "timeSpan": "16:03:45:17"
   *     }
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCalculationCurrentIncrementPost$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCalculationCurrentIncrementPost(params?: ApiCalculationCurrentIncrementPost$Params, context?: HttpContext): Observable<Calculation> {
    return this.apiCalculationCurrentIncrementPost$Response(params, context).pipe(
      map((r: StrictHttpResponse<Calculation>): Calculation => r.body)
    );
  }

  /** Path part for operation `apiCalculationCurrentDecrementPost()` */
  static readonly ApiCalculationCurrentDecrementPostPath = '/api/calculation/current/decrement';

  /**
   * Allows you to decrement the current datetime by a specific timespan.
   *
   * Sample request:
   *             
   *     POST /current/decrement
   *     {
   *         "timeZone": "Europe/Amsterdam",
   *         "timeSpan": "16:03:45:17"
   *     }
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCalculationCurrentDecrementPost()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCalculationCurrentDecrementPost$Response(params?: ApiCalculationCurrentDecrementPost$Params, context?: HttpContext): Observable<StrictHttpResponse<Calculation>> {
    return apiCalculationCurrentDecrementPost(this.http, this.rootUrl, params, context);
  }

  /**
   * Allows you to decrement the current datetime by a specific timespan.
   *
   * Sample request:
   *             
   *     POST /current/decrement
   *     {
   *         "timeZone": "Europe/Amsterdam",
   *         "timeSpan": "16:03:45:17"
   *     }
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCalculationCurrentDecrementPost$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCalculationCurrentDecrementPost(params?: ApiCalculationCurrentDecrementPost$Params, context?: HttpContext): Observable<Calculation> {
    return this.apiCalculationCurrentDecrementPost$Response(params, context).pipe(
      map((r: StrictHttpResponse<Calculation>): Calculation => r.body)
    );
  }

  /** Path part for operation `apiCalculationCustomIncrementPost()` */
  static readonly ApiCalculationCustomIncrementPostPath = '/api/calculation/custom/increment';

  /**
   * Allows you to increment a custom datetime by a specific timespan.
   *
   * Sample request:
   *             
   *     POST /custom/increment
   *     {
   *         "timeZone": "Europe/Amsterdam",
   *         "dateTime": "2021-11-27 05:45:00",
   *         "timeSpan": "16:03:45:17",
   *         "dstAmbiguity": ""
   *     }
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCalculationCustomIncrementPost()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCalculationCustomIncrementPost$Response(params?: ApiCalculationCustomIncrementPost$Params, context?: HttpContext): Observable<StrictHttpResponse<Calculation>> {
    return apiCalculationCustomIncrementPost(this.http, this.rootUrl, params, context);
  }

  /**
   * Allows you to increment a custom datetime by a specific timespan.
   *
   * Sample request:
   *             
   *     POST /custom/increment
   *     {
   *         "timeZone": "Europe/Amsterdam",
   *         "dateTime": "2021-11-27 05:45:00",
   *         "timeSpan": "16:03:45:17",
   *         "dstAmbiguity": ""
   *     }
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCalculationCustomIncrementPost$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCalculationCustomIncrementPost(params?: ApiCalculationCustomIncrementPost$Params, context?: HttpContext): Observable<Calculation> {
    return this.apiCalculationCustomIncrementPost$Response(params, context).pipe(
      map((r: StrictHttpResponse<Calculation>): Calculation => r.body)
    );
  }

  /** Path part for operation `apiCalculationCustomDecrementPost()` */
  static readonly ApiCalculationCustomDecrementPostPath = '/api/calculation/custom/decrement';

  /**
   * Allows you to decrement a custom datetime by a specific timespan.
   *
   * Sample request:
   *             
   *     POST /custom/decrement
   *     {
   *         "timeZone": "Europe/Amsterdam",
   *         "dateTime": "2021-11-27 05:45:00",
   *         "timeSpan": "16:03:45:17",
   *         "dstAmbiguity": ""
   *     }
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCalculationCustomDecrementPost()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCalculationCustomDecrementPost$Response(params?: ApiCalculationCustomDecrementPost$Params, context?: HttpContext): Observable<StrictHttpResponse<Calculation>> {
    return apiCalculationCustomDecrementPost(this.http, this.rootUrl, params, context);
  }

  /**
   * Allows you to decrement a custom datetime by a specific timespan.
   *
   * Sample request:
   *             
   *     POST /custom/decrement
   *     {
   *         "timeZone": "Europe/Amsterdam",
   *         "dateTime": "2021-11-27 05:45:00",
   *         "timeSpan": "16:03:45:17",
   *         "dstAmbiguity": ""
   *     }
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCalculationCustomDecrementPost$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCalculationCustomDecrementPost(params?: ApiCalculationCustomDecrementPost$Params, context?: HttpContext): Observable<Calculation> {
    return this.apiCalculationCustomDecrementPost$Response(params, context).pipe(
      map((r: StrictHttpResponse<Calculation>): Calculation => r.body)
    );
  }

}
